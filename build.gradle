buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.2'
        classpath 'com.google.gms:google-services:4.3.3'
    }
}

description 'Web application launcher for HBM devices.'

version = '1.20.0'

ext {
    isReleaseBuild = false
}

static String getGitHash() {
    return 'git rev-parse --verify HEAD'.execute().text.trim()
}

static def getTotalCommits() {
    return 'git rev-list HEAD --count'.execute().text.trim()
}

static def isDirty() {
    def dirty = 'git diff --shortstat'.execute().text.trim()
    return dirty != ""
}

static def isRelease() {
    def getRelease = "git describe --exact-match --tags HEAD".execute()
    getRelease.waitFor()
    return getRelease.exitValue() == 0
}
//set build variables based on build type (release, continuous integration, development)

ext.isReleaseBuild = isRelease()
def totalCommits = getTotalCommits()

if (!ext.isReleaseBuild) {
    version = version + "-" + totalCommits
}

if (isDirty()) {
    version = version + "+dirty"
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
        }
    }

    repositories {
        mavenCentral()
        google()
        jcenter()
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'com.google.android.material:material:1.2.0-alpha01'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.firebase:firebase-core:17.2.1'
    implementation 'com.google.firebase:firebase-crash:16.2.1'
    implementation 'com.hbm:devscan:2.2.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'de.psdev.licensesdialog:licensesdialog:2.1.0'
    implementation 'ru.noties:markwon:2.0.2'

    testImplementation 'junit:junit:4.12'
}

configurations {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    defaultConfig {
        applicationId "com.hbm.devices.scan.ui.android"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode totalCommits.toInteger()
        versionName version
        buildConfigField("long", "TIMESTAMP", System.currentTimeMillis() + "L")
        buildConfigField("String", "GITHASH", "\"${getGitHash()}\"")
    }

    signingConfigs {
        release {
            //storeFile file(RELEASE_STORE_FILE)
            //storePassword RELEASE_STORE_PASSWORD
            //keyAlias RELEASE_KEY_ALIAS
            //keyPassword RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            shrinkResources false
            debuggable false
            zipAlignEnabled true
            //		signingConfig signingConfigs.release
        }
    }

    lintOptions {
        checkAllWarnings true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

task createWrapper(type: Wrapper) {
    gradleVersion = '6.0'
}


